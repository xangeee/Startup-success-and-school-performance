# -*- coding: utf-8 -*-
"""4_DataSplit

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rew6pyLZ3YKv2ymw-RxasFISprn6P7xm
"""

import duckdb
import pandas as pd
import os
from IPython.display import display
import numpy as np
import random

random.seed(10)

pd.set_option('display.max_columns', None)
pd.set_option('display.max_rows', None)

def generate_table(conn, df, name):
        drop_table(conn, name)
        existingTables=conn.execute("SHOW TABLES").fetchall()
        if(len(existingTables)>0):
            for table in existingTables:
                if(table[0] == name):
                    conn.execute("DROP TABLE " + name)
        conn.execute("CREATE TABLE " + name + " AS SELECT * FROM df")
        
def drop_table(conn, name):
        existingTables=conn.execute("SHOW TABLES").fetchall()
        if(len(existingTables)>0):
            for table in existingTables:
                if(table[0] == name):
                    conn.execute("DROP TABLE " + name)

"""Getting dataset"""

conn = duckdb.connect("../DB/DB_FeatureGeneration",read_only=False)
df=conn.execute("SELECT * from dataForModelling".format()).fetchdf()

x = df.loc[:, df.columns != "status"]
y = df.status

from sklearn.model_selection import train_test_split
# Split dataset into training set and test set
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=1) 

train = X_train
train["status"] = y_train
test = X_test
test["status"] = y_test

#checking data is balanced
train.status.value_counts().plot(kind='bar')
test.status.value_counts().plot(kind='bar')

"""**Storing the datasets**"""

generate_table(conn,train,"train_data")
generate_table(conn,train,"test_data")
# #show the table 
df=conn.execute("SELECT * from train_data").fetchdf()
df.head()
df=conn.execute("SELECT * from test_data").fetchdf()
df.head()

conn.close()